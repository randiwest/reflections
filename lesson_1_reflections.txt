How did viewing a diff between two versions of a file help you see the bug that was introduced?

    By isolating the lines that were different it allowed for quicker problem solving and gave confidence that the balance of the file was the root of the issue.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

    It will enable you to develop as a more efficient pace without as much concern for breaking to code.  You can more easily go back and determine what you did and where.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

    I think it's better because it will have more logical breakpoints for future reference that have comments.  It's disadvantage is it takes more time and is subject to user error.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

    Files within Git are code based and typically have files that are interelated.  This typically isn't true for Google Docs.

How can you use the commands git log and git diff to view the history of files?

    Git log shows the list of all commits and then you can use git diff to isolate changes between two specific commits.

How might using version control make you more confident to make changes that could break something?

    Having the ability to go back and view previous versions to find the one where an error occured allows you to feel more confident making changes.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to use it for all code I write now so that it becomes intuitive.